generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  email       String     @unique
  fullName    String
  phoneNumber String?    @unique
  password    String
  isActive    Boolean    @default(true)
  latitude    String?
  longitude   String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  qrCode      String?    @unique
  customers   Customer[]
  leads       Lead[]
}

model Customer {
  id                 Int      @id @default(autoincrement())
  fullName           String
  phoneNumber        String   @unique
  email              String?  @unique
  aadharNumber       String?  @unique
  pincode            String
  agentId            Int
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  address            String
  talukId            Int
  isConverted        Boolean  @default(false)
  register_latitude  String
  register_longitude String
  agent              User     @relation(fields: [agentId], references: [id])
  taluk              Taluk    @relation(fields: [talukId], references: [id])
  leads              Lead[]
}

model District {
  id           Int     @id @default(autoincrement())
  districtName String  @unique
  isActive     Boolean @default(true)
  leads        Lead[]
  taluks       Taluk[]
}

model Taluk {
  id         Int        @id @default(autoincrement())
  talukName  String     @unique
  districtId Int
  isActive   Boolean    @default(true)
  branchId   Int?
  customers  Customer[]
  leads      Lead[]
  branch     Branch?    @relation(fields: [branchId], references: [id])
  district   District   @relation(fields: [districtId], references: [id])
}

model ProductCategory {
  id           Int           @id @default(autoincrement())
  categoryName String        @unique
  isActive     Boolean       @default(true)
  leads        Lead[]
  productTypes ProductType[]
}

model ProductType {
  id                Int             @id @default(autoincrement())
  typeName          String          @unique
  isActive          Boolean         @default(true)
  productCategoryId Int
  leads             Lead[]
  productCategory   ProductCategory @relation(fields: [productCategoryId], references: [id])
}

model Status {
  id         Int     @id @default(autoincrement())
  statusName String  @unique
  isActive   Boolean @default(true)
  leads      Lead[]
}

model Lead {
  id                Int             @id @default(autoincrement())
  customerId        Int
  agentId           Int
  productCategoryId Int
  productTypeId     Int
  statusId          Int
  districtId        Int
  talukId           Int
  branchId          Int?
  agent             User            @relation(fields: [agentId], references: [id])
  branch            Branch?         @relation(fields: [branchId], references: [id])
  customer          Customer        @relation(fields: [customerId], references: [id])
  district          District        @relation(fields: [districtId], references: [id])
  productCategory   ProductCategory @relation(fields: [productCategoryId], references: [id])
  productType       ProductType     @relation(fields: [productTypeId], references: [id])
  status            Status          @relation(fields: [statusId], references: [id])
  taluk             Taluk           @relation(fields: [talukId], references: [id])
}

model Branch {
  id         Int     @id @default(autoincrement())
  branchName String  @unique
  branchCode String  @unique
  leads      Lead[]
  taluks     Taluk[]
}
